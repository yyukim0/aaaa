//faz a struct do objeto

typedef struct {
    int x; // Posição X do objeto
    int y; // Posição Y do objeto
    char *name; // Nome do objeto
    ALLEGRO_BITMAP *sprite;   // Sprite do objeto
} GameObject;

Player GameObject;

GameObject.x = 100;
GameObject.y = 100;
GameObject.name = "abajur";
GameObject.sprite = al_load_bitmap("./abajur.png");

    al_destroy_bitmap(abajur.sprite);

---

faz a struct do personagem

typedef struct {
    int x;
    int y;
    char *name;
    ALLEGRO_BITMAP *sprite;  
} Player;

//exemplo de como fazer um coiso

Player mainCharacter;

mainCharacter.x = 200;
mainCharacter.y = 200;
mainCharacter.name = "mainCharacter";
mainCharacter.sprite = al_load_bitmap("./mc.png");

    al_destroy_bitmap(mainCharacter.sprite);

--

int player_interacao(Player mainCharacter, GameObject abajur) {
    // Calcula a distância entre o jogador e o objeto
    int dx = mainCharacter.x - abajur.x;
    int dy = mainCharacter.y - abajur.y;
    return (dx * dx + dy * dy) <= (range_interacao * range_interacao); //isso é pitágoras, é o mesmo que distância do X ^2 + distância do Y ^2 <= range_interacao ^2
}

int range_interacao = 10;

//a função player_interação vai dar um resultado de true ou false, portanto deve ser implementada dentro do loop da seguinte forma

if (player_interacao(mainCharacter, abajur) { //se der true, lance o código
     código
}
